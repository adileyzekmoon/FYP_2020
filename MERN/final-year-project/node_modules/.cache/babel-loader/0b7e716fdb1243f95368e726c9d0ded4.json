{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AdilAzmoon\\\\Desktop\\\\Mini Projects\\\\FYP\\\\FYP_2020\\\\MERN\\\\final-year-project\\\\src\\\\components\\\\Submit.jsx\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport axios from 'axios';\nimport * as tf from '@tensorflow/tfjs';\n\nclass Submit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: this.props.location.state.user,\n      name: this.props.location.state.name,\n      patientData: this.props.location.state.patientData,\n      date: new Date().toLocaleString(),\n      selectedFile: null,\n      loadingState: true,\n      canvasImage: null,\n      model: null,\n      predictionClasses: ['0%', '100%', '12.5%', '25%', '37.5%', '50%', '62.5%', '75%', '87.5%'],\n      result: null,\n      login: this.props.location.state.login\n    };\n\n    this.loadingState = () => {\n      if (this.state.loadingState) {\n        return React.createElement(\"div\", {\n          className: \"alert alert-danger\",\n          role: \"alert\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"Loading model\");\n      } else {\n        return React.createElement(\"div\", {\n          className: \"alert alert-primary alert-dismissible fade show\",\n          role: \"alert\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"Model loaded\", React.createElement(\"button\", {\n          type: \"button\",\n          className: \"close\",\n          \"data-dismiss\": \"alert\",\n          \"aria-label\": \"Close\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"\\xD7\")));\n      }\n    };\n\n    this.addToDb = event => {\n      axios.post('http://localhost:3001/user/add', {\n        name: this.state.name,\n        date: this.state.date,\n        result: this.state.result\n      });\n    };\n\n    this.fileHandler = event => {\n      this.setState({\n        selectedFile: event.target.files[0],\n        canvasImage: URL.createObjectURL(event.target.files[0])\n      });\n    };\n\n    this.uploadFileName = () => {\n      if (this.state.selectedFile === null) {\n        return \"Choose File\";\n      } else return this.state.selectedFile.name;\n    };\n\n    this.onClickHandler = event => {\n      var inputData3D = tf.browser.fromPixels(document.getElementById(\"inputImage\"));\n      inputData3D = tf.image.resizeBilinear(inputData3D, [160, 120]);\n      const inputData4D = inputData3D.expandDims();\n      var prediction = this.state.model.predict(inputData4D);\n      prediction = prediction.flatten();\n      console.log(prediction.print());\n      const predictedClass = prediction.argMax().dataSync();\n      console.log(predictedClass);\n      const result = this.state.predictionClasses[predictedClass[0]];\n      const date = new Date();\n      this.setState({\n        result: predictedClass[0],\n        date: date.toString()\n      });\n      console.log(result);\n      console.log(date);\n    };\n\n    this.predictButton = () => {\n      if (this.state.selectedFile === null) {\n        return React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-success btn-block\",\n          onClick: this.onClickHandler,\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \"Predict\");\n      } else return React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-success btn-block\",\n        onClick: this.onClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Predict\");\n    };\n\n    this.submitButton = () => {\n      if (this.state.result === null) {\n        return React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary btn-block\",\n          onClick: this.addToDb,\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"Submit\");\n      } else return React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary btn-block\",\n        onClick: this.addToDb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Submit\");\n    };\n\n    this.renderImage = () => {\n      if (this.state.canvasImage === null) {\n        return React.createElement(\"div\", {\n          className: \"alert alert-secondary\",\n          role: \"alert\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"No image uploaded\");\n      } else return React.createElement(\"img\", {\n        id: \"inputImage\",\n        src: this.state.canvasImage,\n        height: \"200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const model = await tf.loadLayersModel('http://localhost:3001/machinelearning/CNN/model.json');\n    model.summary();\n    this.setState({\n      model: model,\n      loadingState: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      name: this.state.name,\n      user: this.props.location.state.user,\n      login: this.state.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container d-flex align-items-center justify-content-center my-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.renderImage()))), React.createElement(\"div\", {\n      className: \"container d-flex align-items-center justify-content-center my-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.state.predictionClasses[this.state.result])))), React.createElement(\"div\", {\n      className: \"container-fluid d-flex align-items-center justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      className: \"custom-file-input\",\n      id: \"customFile\",\n      onChange: this.fileHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-file-label\",\n      htmlFor: \"customFile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.uploadFileName()), this.predictButton(), this.submitButton())))), React.createElement(\"div\", {\n      className: \"container-fluid d-flex align-items-center justify-content-center my-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.loadingState()))));\n  }\n\n}\n\nexport default Submit;","map":{"version":3,"sources":["C:/Users/AdilAzmoon/Desktop/Mini Projects/FYP/FYP_2020/MERN/final-year-project/src/components/Submit.jsx"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Link","Navbar","axios","tf","Submit","state","user","props","location","name","patientData","date","Date","toLocaleString","selectedFile","loadingState","canvasImage","model","predictionClasses","result","login","addToDb","event","post","fileHandler","setState","target","files","URL","createObjectURL","uploadFileName","onClickHandler","inputData3D","browser","fromPixels","document","getElementById","image","resizeBilinear","inputData4D","expandDims","prediction","predict","flatten","console","log","print","predictedClass","argMax","dataSync","toString","predictButton","submitButton","renderImage","componentDidMount","loadLayersModel","summary","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\nimport axios from 'axios';\r\nimport * as tf from '@tensorflow/tfjs';\r\n\r\nclass Submit extends Component {\r\n  state = {\r\n      user : this.props.location.state.user,\r\n      name : this.props.location.state.name,\r\n      patientData : this.props.location.state.patientData,\r\n      date: new Date().toLocaleString(),\r\n      selectedFile: null,\r\n      loadingState: true,\r\n      canvasImage: null,\r\n      model : null,\r\n      predictionClasses: ['0%', '100%'  , '12.5%', '25%', '37.5%', '50%', '62.5%', '75%', '87.5%'],\r\n      result: null,\r\n      login: this.props.location.state.login,\r\n  }\r\n\r\n    async componentDidMount() {\r\n        const model = await tf.loadLayersModel('http://localhost:3001/machinelearning/CNN/model.json');\r\n        model.summary();\r\n        this.setState({model: model,\r\n                      loadingState: false,})\r\n}\r\n\r\n    loadingState = () => {\r\n        if (this.state.loadingState){\r\n            return(\r\n                <div className=\"alert alert-danger\" role=\"alert\">Loading model</div>\r\n                )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"alert alert-primary alert-dismissible fade show\" role=\"alert\">\r\n                    Model loaded\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                )\r\n        }\r\n    }\r\n\r\n\r\n    addToDb = event => {\r\n    axios.post('http://localhost:3001/user/add', {\r\n        name: this.state.name,\r\n        date: this.state.date,\r\n        result: this.state.result\r\n    });\r\n    }\r\n    \r\n    fileHandler=event=>{\r\n    this.setState({\r\n        selectedFile: event.target.files[0],\r\n        canvasImage: URL.createObjectURL(event.target.files[0]),\r\n    })\r\n  }\r\n    uploadFileName = () => {\r\n        if (this.state.selectedFile === null){\r\n            return(\"Choose File\")\r\n        }\r\n        else return (this.state.selectedFile.name)\r\n    }\r\n    \r\n    onClickHandler = event => {\r\n        var inputData3D = tf.browser.fromPixels(document.getElementById(\"inputImage\"));\r\n        inputData3D = tf.image.resizeBilinear(inputData3D, [160,120])\r\n        const inputData4D = inputData3D.expandDims();\r\n        var prediction = this.state.model.predict(inputData4D);\r\n        prediction = prediction.flatten();\r\n        console.log(prediction.print());\r\n        const predictedClass = prediction.argMax().dataSync();\r\n        console.log(predictedClass);\r\n        const result = this.state.predictionClasses[predictedClass[0]];\r\n        const date = new Date();\r\n        this.setState({result: predictedClass[0],\r\n                      date: date.toString()});\r\n        console.log(result);\r\n        console.log(date)\r\n    }\r\n    \r\n    predictButton = () => {\r\n        if (this.state.selectedFile === null) {\r\n            return(\r\n            <button type=\"button\" className=\"btn btn-success btn-block\" onClick={this.onClickHandler} disabled>Predict</button>)\r\n        }\r\n        else return(\r\n            <button type=\"button\" className=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Predict</button>\r\n        )\r\n    }\r\n    \r\n    submitButton = () => {\r\n        if (this.state.result === null) {\r\n            return(\r\n            <button type=\"button\" className=\"btn btn-primary btn-block\" onClick={this.addToDb} disabled>Submit</button>)\r\n        }\r\n        else return(\r\n            <button type=\"button\" className=\"btn btn-primary btn-block\" onClick={this.addToDb}>Submit</button>\r\n        )\r\n    }\r\n    \r\n    renderImage = () => {\r\n        if (this.state.canvasImage === null){\r\n            return(\r\n                <div className=\"alert alert-secondary\" role=\"alert\">No image uploaded</div>\r\n            )\r\n        }\r\n        else return(\r\n            <img id=\"inputImage\" src={this.state.canvasImage} height=\"200\"/>\r\n        )\r\n    }\r\n\r\n\r\n  render() {\r\n      return( \r\n        <div>\r\n              <Navbar name= {this.state.name} user={this.props.location.state.user} login={this.state.login} />\r\n              \r\n              <div className=\"container d-flex align-items-center justify-content-center my-5\">\r\n                  <div className=\"row\">\r\n                      <div className=\"col\">\r\n                          {this.renderImage()}\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div className=\"container d-flex align-items-center justify-content-center my-5\">\r\n                  <div className=\"row\">\r\n                      <div className=\"col\">\r\n                          <h1>{this.state.predictionClasses[this.state.result]}</h1>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div className=\"container-fluid d-flex align-items-center justify-content-center\">\r\n                  <div className=\"row\">\r\n                      <div className=\"col\">\r\n                          <div className=\"custom-file\">\r\n                              <input type=\"file\" className=\"custom-file-input\" id=\"customFile\" onChange={this.fileHandler}/>\r\n                              <label className=\"custom-file-label\" htmlFor=\"customFile\">{this.uploadFileName()}</label>\r\n                              {this.predictButton()}\r\n                              {this.submitButton()}\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              \r\n              <div className=\"container-fluid d-flex align-items-center justify-content-center my-5\">\r\n                  <div className=\"row \">\r\n                      <div className=\"col\">\r\n                          {this.loadingState()}                      \r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nexport default Submit;\r\n"]},"metadata":{},"sourceType":"module"}