{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AdilAzmoon\\\\Desktop\\\\Mini Projects\\\\FYP\\\\FYP_2020\\\\MERN\\\\final-year-project\\\\src\\\\components\\\\Home.jsx\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport axios from 'axios';\nimport CanvasJSReact from './canvasjs.react'; //var CanvasJSReact = require('./canvasjs.react');\n\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: \"Patient\",\n      login: false,\n      name: \"Adil\",\n      patients: [\"Adil\", \"Patrice\", \"Brandy\"],\n      history: null\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:3001/user/history', {\n      params: {\n        name: this.state.name\n      }\n    }).then(res => this.setState({\n      history: res.data\n    }));\n  }\n\n  renderGraphsDoc() {\n    return React.createElement(\"div\", {\n      className: \"row d-flex justify-content-center text-center w-100 m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.state.patients.map(patient => React.createElement(\"div\", {\n      className: \"col-md-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(CanvasJSChart, {\n      options: this.patientGraph(patient)\n      /* onRef={ref => this.chart = ref} */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }))));\n  }\n\n  renderGraphsPat(patient) {\n    if (this.state.history != null) {\n      return React.createElement(\"div\", {\n        className: \"row d-flex justify-content-center text-center w-100 m-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(CanvasJSChart, {\n        options: this.patientGraph(patient)\n        /* onRef={ref => this.chart = ref} */\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })));\n    }\n  }\n\n  patientGraph(patient) {\n    var dateData = this.state.history.data;\n    console.log(dateData);\n    var datePoints = [];\n    const initialDate = new Date(dateData[0].date);\n    console.log(initialDate);\n    dateData.forEach(element => {\n      const currentDate = new Date(element.date);\n      var dateDiff = (currentDate - initialDate) / (1000 * 60 * 60 * 24);\n      console.log(dateDiff);\n      datePoints.push({\n        x: dateDiff,\n        y: element.result\n      });\n    });\n    console.log(datePoints);\n    const options = {\n      animationEnabled: true,\n      exportEnabled: true,\n      theme: \"light2\",\n      // \"light1\", \"dark1\", \"dark2\"\n      title: {\n        text: patient\n      },\n      axisY: {\n        title: \"Recovery Rate\",\n        includeZero: false,\n        suffix: \"%\"\n      },\n      axisX: {\n        title: \"Days since start\",\n        prefix: \"D\",\n        interval: 2\n      },\n      data: [{\n        type: \"line\",\n        toolTipContent: \"Day {x}: {y}%\",\n        dataPoints: datePoints\n      }]\n    };\n    return options;\n  }\n\n  render() {\n    if (this.state.user == \"Patient\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid d-flex align-items-center justify-content-center h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.renderGraphsPat(this.state.name)));\n    } else if (this.state.user == \"Doctor\") {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        user: \"Doctor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid d-flex align-items-center justify-content-center h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.renderGraphs()));\n    }\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/AdilAzmoon/Desktop/Mini Projects/FYP/FYP_2020/MERN/final-year-project/src/components/Home.jsx"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Link","Navbar","axios","CanvasJSReact","CanvasJS","CanvasJSChart","Home","state","user","login","name","patients","history","componentDidMount","get","params","then","res","setState","data","renderGraphsDoc","map","patient","patientGraph","renderGraphsPat","dateData","console","log","datePoints","initialDate","Date","date","forEach","element","currentDate","dateDiff","push","x","y","result","options","animationEnabled","exportEnabled","theme","title","text","axisY","includeZero","suffix","axisX","prefix","interval","type","toolTipContent","dataPoints","render","renderGraphs"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,kBAA1B,C,CACA;;AAEA,IAAIC,QAAQ,GAAGD,aAAa,CAACC,QAA7B;AACA,IAAIC,aAAa,GAAGF,aAAa,CAACE,aAAlC;;AAEA,MAAMC,IAAN,SAAmBX,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BY,KAD2B,GACnB;AACJC,MAAAA,IAAI,EAAG,SADH;AAEJC,MAAAA,KAAK,EAAG,KAFJ;AAGJC,MAAAA,IAAI,EAAG,MAHH;AAIJC,MAAAA,QAAQ,EAAG,CAAC,MAAD,EAAS,SAAT,EAAoB,QAApB,CAJP;AAKJC,MAAAA,OAAO,EAAE;AALL,KADmB;AAAA;;AAS7BC,EAAAA,iBAAiB,GAAG;AAChBX,IAAAA,KAAK,CAACY,GAAN,CAAU,oCAAV,EAAgD;AAACC,MAAAA,MAAM,EAAE;AACjDL,QAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AADgC;AAAT,KAAhD,EAGSM,IAHT,CAGcC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAACN,MAAAA,OAAO,EAACK,GAAG,CAACE;AAAb,KAAd,CAHrB;AAIH;;AAEDC,EAAAA,eAAe,GAAE;AACb,WACI;AAAK,MAAA,SAAS,EAAC,yDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2E,KAAKb,KAAL,CAAWI,QAAX,CAAoBU,GAApB,CAAwBC,OAAO,IAAI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAI,KAAKC,YAAL,CAAkBD,OAAlB;AACtK;AAD4I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B,CAAnC,CAA3E,CADJ;AAMH;;AAEDE,EAAAA,eAAe,CAACF,OAAD,EAAS;AACpB,QAAI,KAAKf,KAAL,CAAWK,OAAX,IAAsB,IAA1B,EAA+B;AAC/B,aACI;AAAK,QAAA,SAAS,EAAC,yDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B,oBAAC,aAAD;AAAe,QAAA,OAAO,EAAI,KAAKW,YAAL,CAAkBD,OAAlB;AAC5D;AADkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B,CADJ,CADJ;AAMU;AACb;;AAEDC,EAAAA,YAAY,CAACD,OAAD,EAAS;AACjB,QAAIG,QAAQ,GAAG,KAAKlB,KAAL,CAAWK,OAAX,CAAmBO,IAAlC;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAIG,UAAU,GAAG,EAAjB;AACA,UAAMC,WAAW,GAAG,IAAIC,IAAJ,CAASL,QAAQ,CAAC,CAAD,CAAR,CAAYM,IAArB,CAApB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ;AACAJ,IAAAA,QAAQ,CAACO,OAAT,CAAiBC,OAAO,IAAI;AACxB,YAAMC,WAAW,GAAG,IAAIJ,IAAJ,CAASG,OAAO,CAACF,IAAjB,CAApB;AACA,UAAII,QAAQ,GAAG,CAACD,WAAW,GAAGL,WAAf,KAA8B,OAAK,EAAL,GAAQ,EAAR,GAAW,EAAzC,CAAf;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ;AACAP,MAAAA,UAAU,CAACQ,IAAX,CAAgB;AAACC,QAAAA,CAAC,EAAEF,QAAJ;AACAG,QAAAA,CAAC,EAAEL,OAAO,CAACM;AADX,OAAhB;AAEH,KAND;AAOAb,IAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AAEA,UAAMY,OAAO,GAAG;AACjBC,MAAAA,gBAAgB,EAAE,IADD;AAEjBC,MAAAA,aAAa,EAAE,IAFE;AAGjBC,MAAAA,KAAK,EAAE,QAHU;AAGA;AACjBC,MAAAA,KAAK,EAAC;AACLC,QAAAA,IAAI,EAAEvB;AADD,OAJW;AAOjBwB,MAAAA,KAAK,EAAE;AACNF,QAAAA,KAAK,EAAE,eADD;AAENG,QAAAA,WAAW,EAAE,KAFP;AAGNC,QAAAA,MAAM,EAAE;AAHF,OAPU;AAYjBC,MAAAA,KAAK,EAAE;AACNL,QAAAA,KAAK,EAAE,kBADD;AAENM,QAAAA,MAAM,EAAE,GAFF;AAGNC,QAAAA,QAAQ,EAAE;AAHJ,OAZU;AAiBjBhC,MAAAA,IAAI,EAAE,CAAC;AACNiC,QAAAA,IAAI,EAAE,MADA;AAENC,QAAAA,cAAc,EAAE,eAFV;AAGNC,QAAAA,UAAU,EAAE1B;AAHN,OAAD;AAjBW,KAAhB;AAwBA,WAAOY,OAAP;AACH;;AAGCe,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKhD,KAAL,CAAWC,IAAX,IAAmB,SAAvB,EAAiC;AACnC,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGI;AAAK,QAAA,SAAS,EAAC,wEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKgB,eAAL,CAAqB,KAAKjB,KAAL,CAAWG,IAAhC,CADL,CAHJ,CADJ;AAUG,KAXD,MAYK,IAAI,KAAKH,KAAL,CAAWC,IAAX,IAAmB,QAAvB,EAAgC;AACjC,aACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGI;AAAK,QAAA,SAAS,EAAC,wEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKgD,YAAL,EADL,CAHJ,CADE;AAWH;AACJ;;AAzG0B;;AA4G7B,eAAelD,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\nimport axios from 'axios';\r\nimport CanvasJSReact from './canvasjs.react';\r\n//var CanvasJSReact = require('./canvasjs.react');\r\n\r\nvar CanvasJS = CanvasJSReact.CanvasJS;\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\nclass Home extends Component {\r\n  state = {\r\n      user : \"Patient\",\r\n      login : false,\r\n      name : \"Adil\",\r\n      patients : [\"Adil\", \"Patrice\", \"Brandy\"],\r\n      history: null,\r\n  }\r\n\r\ncomponentDidMount() {\r\n    axios.get('http://localhost:3001/user/history', {params: {\r\n            name: this.state.name,\r\n        }})\r\n            .then(res => this.setState({history:res.data}));\r\n}\r\n\r\nrenderGraphsDoc(){    \r\n    return(\r\n        <div className=\"row d-flex justify-content-center text-center w-100 m-2\">{ this.state.patients.map(patient => <div className=\"col-md-5\"><CanvasJSChart options = {this.patientGraph(patient)}\r\n\t\t\t\t/* onRef={ref => this.chart = ref} */\r\n\t\t\t/>\r\n                    </div>)}</div>\r\n            )\r\n}\r\n\r\nrenderGraphsPat(patient){\r\n    if (this.state.history != null){\r\n    return(\r\n        <div className=\"row d-flex justify-content-center text-center w-100 m-2\">\r\n            <div className=\"col-md-5\"><CanvasJSChart options = {this.patientGraph(patient)}\r\n\t\t\t\t/* onRef={ref => this.chart = ref} */\r\n\t\t\t/>\r\n                    </div></div>\r\n            )}\r\n}\r\n\r\npatientGraph(patient){\r\n    var dateData = this.state.history.data;\r\n    console.log(dateData);\r\n    var datePoints = [];\r\n    const initialDate = new Date(dateData[0].date);\r\n    console.log(initialDate);\r\n    dateData.forEach(element => {\r\n        const currentDate = new Date(element.date);\r\n        var dateDiff = (currentDate - initialDate)/ (1000*60*60*24);\r\n        console.log(dateDiff);\r\n        datePoints.push({x: dateDiff,\r\n                        y: element.result})\r\n    })\r\n    console.log(datePoints);\r\n    \r\n    const options = {\r\n\t\t\tanimationEnabled: true,\r\n\t\t\texportEnabled: true,\r\n\t\t\ttheme: \"light2\", // \"light1\", \"dark1\", \"dark2\"\r\n\t\t\ttitle:{\r\n\t\t\t\ttext: patient\r\n\t\t\t},\r\n\t\t\taxisY: {\r\n\t\t\t\ttitle: \"Recovery Rate\",\r\n\t\t\t\tincludeZero: false,\r\n\t\t\t\tsuffix: \"%\"\r\n\t\t\t},\r\n\t\t\taxisX: {\r\n\t\t\t\ttitle: \"Days since start\",\r\n\t\t\t\tprefix: \"D\",\r\n\t\t\t\tinterval: 2\r\n\t\t\t},\r\n\t\t\tdata: [{\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\ttoolTipContent: \"Day {x}: {y}%\",\r\n\t\t\t\tdataPoints: datePoints,\r\n\t\t\t}]\r\n\t\t}\r\n    \r\n    return options\r\n}\r\n\r\n\r\n  render() {\r\n      if (this.state.user == \"Patient\"){\r\n    return (\r\n        <div>\r\n            <Navbar user={this.state.user}                \r\n                />\r\n            <div className=\"container-fluid d-flex align-items-center justify-content-center h-100\">\r\n                {this.renderGraphsPat(this.state.name)}\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    );}\r\n      else if (this.state.user == \"Doctor\"){\r\n          return (\r\n        <div>\r\n            <Navbar user=\"Doctor\"                \r\n                />\r\n            <div className=\"container-fluid d-flex align-items-center justify-content-center h-100\">\r\n                {this.renderGraphs()}\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    );\r\n      }\r\n  }\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}